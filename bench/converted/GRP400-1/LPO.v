(* Generated by tptp2coqp *)
Require Import Setoid.
From Completion Require Import Plugin.

(* axioms *)
Parameter G : Set.
Parameter a : G.
Parameter b : G.
Parameter c : G.
Parameter commutator : G -> G -> G.
Parameter multiply : G -> G -> G.
(* HACK: for coq-completion *)
Hint Resolve a : hint_hack_compl.
Axiom ax_associativity_of_commutator : forall A B C : G, (commutator (commutator A B) C) = (commutator A (commutator B C)).
Axiom ax_commutator : forall A B : G, (multiply A B) = (multiply B (multiply A (commutator A B))).
Axiom ax_left_cancellation : forall A B C : G, (multiply A B) = (multiply A C).
Axiom ax_right_cancellation : forall A B C : G, (multiply A B) = (multiply C B).
Axiom ax_associativity_of_multiply : forall X Y Z : G, (multiply (multiply X Y) Z) = (multiply X (multiply Y Z)).

Complete ax_associativity_of_commutator ax_commutator ax_left_cancellation ax_right_cancellation ax_associativity_of_multiply : a b c commutator multiply : hint
  for ((commutator (multiply a b) c) = (multiply (commutator a c) (commutator b c))).

(* Goal *)
Theorem check : (commutator (multiply a b) c) = (multiply (commutator a c) (commutator b c)).
Proof.
  lpo_autorewrite with hint.
  reflexivity.
Qed.

Check check.

