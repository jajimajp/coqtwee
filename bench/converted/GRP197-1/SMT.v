(* Generated by tptp2coqp *)
Require Import SMTCoq.SMTCoq ZArith.
Local Open Scope Z_scope.

(* axioms *)
Variable a : Z.
Variable b : Z.
Variable multiply : Z -> Z -> Z.
Axiom ax_condition : forall X Y : Z, (multiply X (multiply X (multiply X (multiply Y Y)))) =? (multiply Y (multiply X (multiply X (multiply Y X)))).
Axiom ax_left_cancellation : forall A B C : Z, (multiply A B) =? (multiply A C).
Axiom ax_right_cancellation : forall A B C : Z, (multiply A B) =? (multiply C B).
Axiom ax_associativity_of_multiply : forall X Y Z : Z, (multiply (multiply X Y) Z) =? (multiply X (multiply Y Z)).

Add_lemmas ax_condition ax_left_cancellation ax_right_cancellation ax_associativity_of_multiply.

(* Goal *)
Theorem check : (multiply b (multiply b (multiply a (multiply a a)))) =? (multiply a (multiply b (multiply a (multiply a b)))).
Proof.
  smt.
Qed.

Check check.

