(* Generated by tptp2coqp *)
Require Import SMTCoq.SMTCoq ZArith.
Local Open Scope Z_scope.

(* axioms *)
Variable a : Z.
Variable b : Z.
Variable c : Z.
Variable commutator : Z -> Z -> Z.
Variable multiply : Z -> Z -> Z.
Axiom ax_nilpotency : forall A B C : Z, (multiply (commutator A B) C) =? (multiply C (commutator A B)).
Axiom ax_commutator : forall A B : Z, (multiply A B) =? (multiply B (multiply A (commutator A B))).
Axiom ax_left_cancellation : forall A B C : Z, (multiply A B) =? (multiply A C).
Axiom ax_right_cancellation : forall A B C : Z, (multiply A B) =? (multiply C B).
Axiom ax_associativity_of_multiply : forall X Y Z : Z, (multiply (multiply X Y) Z) =? (multiply X (multiply Y Z)).

Add_lemmas ax_nilpotency ax_commutator ax_left_cancellation ax_right_cancellation ax_associativity_of_multiply.

(* Goal *)
Theorem check : (commutator (commutator a b) c) =? (commutator a (commutator b c)).
Proof.
  smt.
Qed.

Check check.

