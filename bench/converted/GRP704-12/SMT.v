(* Generated by tptp2coqp *)
Require Import SMTCoq.SMTCoq ZArith.
Local Open Scope Z_scope.

(* axioms *)
Variable ld : Z -> Z -> Z.
Variable mult : Z -> Z -> Z.
Variable op_c : Z.
Variable op_d : Z.
Variable op_e : Z.
Variable op_f : Z.
Variable rd : Z -> Z -> Z.
Variable unit : Z.
Variable x4 : Z.
Variable x5 : Z.
Axiom ax_f13 : forall A B : Z, op_f =? (mult A (mult B (ld (mult A B) op_c))).
Axiom ax_f12 : forall A B : Z, op_e =? (mult (mult (rd op_c (mult A B)) B) A).
Axiom ax_f11 : forall A : Z, op_d =? (ld A (mult op_c A)).
Axiom ax_f10 : forall A B : Z, (mult A (mult op_c B)) =? (mult (mult A op_c) B).
Axiom ax_f09 : forall A B : Z, (mult A (mult B op_c)) =? (mult (mult A B) op_c).
Axiom ax_f08 : forall A B : Z, (mult op_c (mult A B)) =? (mult (mult op_c A) B).
Axiom ax_f07 : forall A B C : Z, (mult A (mult B (mult B C))) =? (mult (mult (mult A B) B) C).
Axiom ax_f06 : forall A : Z, (mult unit A) =? A.
Axiom ax_f05 : forall A : Z, (mult A unit) =? A.
Axiom ax_f04 : forall A B : Z, (rd (mult A B) B) =? A.
Axiom ax_f03 : forall A B : Z, (mult (rd A B) B) =? A.
Axiom ax_f02 : forall A B : Z, (ld A (mult A B)) =? B.
Axiom ax_f01 : forall A B : Z, (mult A (ld A B)) =? B.

Add_lemmas ax_f13 ax_f12 ax_f11 ax_f10 ax_f09 ax_f08 ax_f07 ax_f06 ax_f05 ax_f04 ax_f03 ax_f02 ax_f01.

(* Goal *)
Theorem check : (mult x4 (mult op_f x5)) =? (mult (mult x4 op_f) x5).
Proof.
  smt.
Qed.

Check check.

